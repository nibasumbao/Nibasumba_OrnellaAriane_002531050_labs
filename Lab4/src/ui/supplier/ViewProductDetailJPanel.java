/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.supplier;

import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Feature;
import model.Product;
import ui.admin.ManageSuppliersJPanel;

/**
 *
 * @author ornellabajou
 */
public class ViewProductDetailJPanel extends javax.swing.JPanel {
    JPanel workArea;
    Product product;
    /**
     * Creates new form ViewProductDetailJPanel
     */
    public ViewProductDetailJPanel(JPanel workArea, Product product) {
        initComponents();
        this.workArea = workArea;
        this.product = product;
        
        txtProductName.setText(this.product.getProductName());
        txtProductId.setText(String.valueOf(this.product.getProductId()));
        txtPrice.setText(String.valueOf(this.product.getPrice()));
        
        
       refreshTable();

    // make table editable after NetBeans locks it
    javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(
        new Object[][] {},
        new String[] { "Feature Name", "Value" }
    ) {
    @Override
    public boolean isCellEditable(int row, int column) {
        return true; //  allow typing in both columns
    }
    };

    tblProductFeatures.setModel(model);

    // allow typing in cells
    tblProductFeatures.setDefaultEditor(Object.class, new javax.swing.DefaultCellEditor(new javax.swing.JTextField()));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductFeatures = new javax.swing.JTable();
        lblProductName = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        lblProductId = new javax.swing.JLabel();
        txtProductId = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnAddFeature = new javax.swing.JButton();
        btnRemoveFeature = new javax.swing.JButton();
        btnUpdateFeature = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        jTextField2.setText("jTextField2");

        lblTitle.setText("View Product Details");

        btnBack.setText("<<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblProductFeatures.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Feature Name", "Value"
            }
        ));
        jScrollPane1.setViewportView(tblProductFeatures);

        lblProductName.setText("Product Name");

        lblProductId.setText("Product Id");

        lblPrice.setText("Price");

        btnAddFeature.setText("Add Feature");
        btnAddFeature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFeatureActionPerformed(evt);
            }
        });

        btnRemoveFeature.setText("Remove Feature");
        btnRemoveFeature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFeatureActionPerformed(evt);
            }
        });

        btnUpdateFeature.setText("Update Product");
        btnUpdateFeature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateFeatureActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblProductName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAddFeature, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btnRemoveFeature, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdateFeature)
                                .addGap(18, 18, 18)
                                .addComponent(btnSave)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProductName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblProductId)
                        .addComponent(txtProductId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPrice)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdateFeature)
                    .addComponent(btnRemoveFeature)
                    .addComponent(btnAddFeature))
                .addGap(51, 51, 51))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddFeatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFeatureActionPerformed
        // TODO add your handling code here:
                                                     
        Feature newFeature = product.addNewFeature();
        newFeature.setName("New Feature");
        newFeature.setValue("Type Value here");

        refreshTable();

        JOptionPane.showMessageDialog(this, "New feature added. You can edit its name and value directly in the table.", "Feature Added", JOptionPane.INFORMATION_MESSAGE);
    
    }//GEN-LAST:event_btnAddFeatureActionPerformed

    private void btnRemoveFeatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFeatureActionPerformed
        // TODO add your handling code here:
        
                                                       
        int selectedRow = tblProductFeatures.getSelectedRow();

            if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this,"Please select a feature to remove.",  "Warning",   JOptionPane.WARNING_MESSAGE);
            return;
        }

        int choice = JOptionPane.showConfirmDialog(this,"Are you sure you want to remove this feature?", "Confirm Delete", JOptionPane.YES_NO_OPTION);

        if (choice == JOptionPane.YES_OPTION) {
            product.getFeatures().remove(selectedRow);
        
            refreshTable();
        
            JOptionPane.showMessageDialog(this, "Feature removed successfully.", "Feature Removed", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_btnRemoveFeatureActionPerformed

    private void btnUpdateFeatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateFeatureActionPerformed
        // TODO add your handling code here:
                                 
        txtProductName.setEditable(true);
        txtPrice.setEditable(true);

        //  Enable table editing
        tblProductFeatures.setEnabled(true);
        tblProductFeatures.setRowSelectionAllowed(true);
        tblProductFeatures.setCellSelectionEnabled(true);

        // Make sure the table accepts keyboard focus
        tblProductFeatures.requestFocusInWindow();

        btnAddFeature.setEnabled(true);
        btnRemoveFeature.setEnabled(true);
        btnSave.setEnabled(true);

        
       
    }//GEN-LAST:event_btnUpdateFeatureActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
                                                 
        product.setProductName(txtProductName.getText());
        product.setPrice(Double.parseDouble(txtPrice.getText()));

        saveFeatures();
        txtProductName.setEditable(false);
        txtPrice.setEditable(false);
    
        btnSave.setEnabled(false);
        btnAddFeature.setEnabled(false);
        btnRemoveFeature.setEnabled(false);

        JOptionPane.showMessageDialog(this, "Product information saved.", "Information", JOptionPane.INFORMATION_MESSAGE);

        refreshTable();


               
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFeature;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRemoveFeature;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdateFeature;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblProductId;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblProductFeatures;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductId;
    private javax.swing.JTextField txtProductName;
    // End of variables declaration//GEN-END:variables

    private void refreshTable() {
        DefaultTableModel model = (DefaultTableModel)tblProductFeatures.getModel();
        model.setRowCount(0);
        
        
            for (Feature f: product.getFeatures()){
                
                Object row []= new Object [2];
                row [0] = f;
                row [1] = f.getValue() == null? "Empty" : f.getValue().toString();
                
                model.addRow(row);
            
            }
        
    }

    private void saveFeatures() {
        DefaultTableModel model = (DefaultTableModel)tblProductFeatures.getModel();
       
        for (int i = 0; i < model.getRowCount(); i++){
            Feature currentFeature = product.getFeatures().get(i);
            currentFeature.setName(tblProductFeatures.getValueAt(i, 0).toString());
            currentFeature.setValue(tblProductFeatures.getValueAt(i, 1));
        }
    }

    private void backAction() {
        workArea.remove(this);
        Component[] componentArray = workArea.getComponents();
        Component component = componentArray[componentArray.length-1];
        
       if (component instanceof ManageProductCatalogJPanel) {
        
        ManageProductCatalogJPanel manageProductCatalogJPanel = (ManageProductCatalogJPanel) component;
        manageProductCatalogJPanel.refreshTable();
        } 
        
        // Or if the previous panel is SearchForProductJPanel
        else if (component instanceof SearchForProductJPanel) {
        SearchForProductJPanel searchForProductPanel = (SearchForProductJPanel) component;
        
        }
        CardLayout layout =  (CardLayout)workArea.getLayout();
        layout.previous(workArea);
        
    }
}

